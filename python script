from xml.etree import ElementTree as ET
import cv2

# read the image and corresponding XML file
# here are hard-coded and need to be more dynamic 
img = cv2.imread("0001.png")
tree = ET.parse('C:/Users/rxie/PycharmProjects/corpImage/python_script_test_1_archive/0001.xml')
root = tree.getroot()
image_no = 1

# specify namespace from the XML file
namespaces = {'doc': 'http://schema.primaresearch.org/PAGE/gts/pagecontent/2019-07-15'}

# cover the images with plain white color if there are any
for image_tag in root.findall('doc:Page/doc:ImageRegion/doc:Coords', namespaces=namespaces):
    image_value = image_tag.get('points')

    # tokenized the x,y coordinates
    s = image_value.split(' ')
    s = [list(map(int, i.split(','))) for i in s]
    x = [i[0] for i in s]
    y = [i[1] for i in s]

    # find the max and min of x,y coords and form a rectangle image
    max_X, min_X = max(x), min(x)
    max_Y, min_Y = max(y), min(y)
    crop_img = img[min_Y:max_Y, min_X:max_X]

    # creat mask and cover the image
    mask = cv2.rectangle(img, (min_X - 17, min_Y), (max_X + 17, max_Y), (255, 255, 255), -1)
    result = cv2.bitwise_and(img, mask)
    img = result

# Prefix all named elements in the XML file, and loop through each coordinate
for tag in root.findall('doc:Page/doc:TextRegion/doc:Coords', namespaces=namespaces):
    value = tag.get('points')

    # tokenized the x,y coordinates
    s = value.split(' ')
    s = [list(map(int, i.split(','))) for i in s]
    x = [i[0] for i in s]
    y = [i[1] for i in s]

    # find the max and min of x,y coords and form a rectangle image
    max_X, min_X = max(x), min(x)
    max_Y, min_Y = max(y), min(y)
    crop_img = img[min_Y:max_Y, min_X:max_X]

    # resize
    crop_img = cv2.resize(crop_img, None, fx=0.5, fy=0.5)

    # save the results
    name = 'C:/Users/rxie/Desktop/result_folder/result_' + str(image_no) + '.jpg'
    cv2.imwrite(name, crop_img)
    image_no += 1

    # show the image
    cv2.imshow('result', crop_img)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
